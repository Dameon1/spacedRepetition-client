{"version":3,"sources":["components/header-bar.js","config.js","actions/utils.js","local-storage.js","actions/auth.js","actions/question.js","components/card.js","components/input.js","validators.js","components/login-form.js","components/landing-page.js","components/question.js","components/dashboard.js","components/requires-login.js","components/registration-form.js","actions/users.js","components/registration-page.js","components/app.js","reducers/auth.js","reducers/question.js","store.js","index.js"],"names":["HeaderBar","react_default","a","createElement","className","splitURLs","process","REACT_APP_API_BASE_URL","split","API_BASE_URL","BASENAME","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","refreshAuthToken","getState","auth","Authorization","_ref2","getQuestion","authorization","question","right","wrong","accuracy","Math","floor","getQuestionSuccess","sendUserResponse","grade","userResponse","resolve","connect","state","loggedIn","logOut","props","logOutButton","userName","Child","onClick","Input","prevProps","meta","active","this","input","focus","warning","_this","touched","htmlFor","name","label","Object","assign","autoComplete","autocomplete","id","ref","React","Component","required","value","undefined","nonEmpty","trim","isTrimmed","LoginForm","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","values","aria-live","onSubmit","handleSubmit","Field","component","validate","disabled","pristine","submitting","reduxForm","form","onSubmitFail","errors","length","field","withRouter","history","push","components_card","Link","to","Question","call","submit","preventDefault","userInput","data","setState","answer","nextQuestion","_this2","console","log","aria-label","onChange","target","Dashboard","requiresLogin","RequiresLogin","authenticating","passThroughProps","objectWithoutProperties","Redirect","displayName","loading","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","content-type","reason","location","defineProperty","registerUser","keys","App","startPeriodicRefresh","stopPeriodicRefresh","refreshInterval","setInterval","clearInterval","components_header_bar","Route","exact","path","LandingPage","RegistrationPage","hasAuthToken","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","formReducer","action","objectSpread","applyMiddleware","thunk","getItem","token","ReactDOM","render","es","BrowserRouter","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.79d46b20.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styles/header-bar.css'\r\n\r\nexport const HeaderBar = () => {\r\n    return (\r\n      <div className=\"header-bar\">\r\n        <h1>SPANISH FLASH</h1>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HeaderBar\r\n","let splitURLs = [null, null]\r\nif (process.env.REACT_APP_API_BASE_URL) {\r\n  splitURLs = process.env.REACT_APP_API_BASE_URL.split(',')\r\n}\r\n\r\nexport const API_BASE_URL = splitURLs[0] || 'http://localhost:8080/api'\r\nexport const BASENAME = splitURLs[1] || ''","// Boilerplate code for handling errors from the API.  If the error response\r\n// contains JSON then we return a rejected promise containing the decoded\r\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\r\n// containing the status text.  If there is no error then we continue with\r\n// the promise chain.\r\nexport const normalizeResponseErrors = res => {\r\n  if (!res.ok) {\r\n    if (\r\n      res.headers.has('content-type') &&\r\n      res.headers.get('content-type').startsWith('application/json')\r\n    ) {\r\n      // It's a nice JSON error returned by us, so decode it\r\n      return res.json().then(err => Promise.reject(err))\r\n    }\r\n    // It's a less informative error returned by express\r\n    return Promise.reject({\r\n      code: res.status,\r\n      message: res.statusText\r\n    })\r\n  }\r\n  return res\r\n}\r\n","export const loadAuthToken = () => {\r\n  return localStorage.getItem('authToken')\r\n}\r\n\r\nexport const saveAuthToken = authToken => {\r\n  try {\r\n    localStorage.setItem('authToken', authToken)\r\n  } catch (e) {}\r\n}\r\n\r\nexport const clearAuthToken = () => {\r\n  try {\r\n    localStorage.removeItem('authToken')\r\n  } catch (e) {}\r\n}\r\n","import jwtDecode from 'jwt-decode'\r\nimport { SubmissionError } from 'redux-form'\r\n\r\nimport { API_BASE_URL } from '../config'\r\nimport { normalizeResponseErrors } from './utils'\r\nimport { saveAuthToken, clearAuthToken } from '../local-storage'\r\n\r\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN'\r\nexport const setAuthToken = authToken => ({\r\n  type: SET_AUTH_TOKEN,\r\n  authToken\r\n})\r\n\r\nexport const CLEAR_AUTH = 'CLEAR_AUTH'\r\nexport const clearAuth = () => ({\r\n  type: CLEAR_AUTH\r\n})\r\n\r\nexport const AUTH_REQUEST = 'AUTH_REQUEST'\r\nexport const authRequest = () => ({\r\n  type: AUTH_REQUEST\r\n})\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const authSuccess = currentUser => ({\r\n  type: AUTH_SUCCESS,\r\n  currentUser\r\n})\r\n\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const authError = error => ({\r\n  type: AUTH_ERROR,\r\n  error\r\n})\r\n\r\n// Stores the auth token in state and localStorage, and decodes and stores\r\n// the user data stored in the token\r\nconst storeAuthInfo = (authToken, dispatch) => {\r\n  const decodedToken = jwtDecode(authToken)\r\n  dispatch(setAuthToken(authToken))\r\n  dispatch(authSuccess(decodedToken.user))\r\n  saveAuthToken(authToken)\r\n}\r\n\r\nexport const login = (username, password) => dispatch => {\r\n  dispatch(authRequest())\r\n  return (\r\n    fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    })\r\n      // Reject any requests which don't return a 200 status, creating\r\n      // errors which follow a consistent format\r\n      .then(res => normalizeResponseErrors(res))\r\n      .then(res => res.json())\r\n      .then(({ authToken }) => storeAuthInfo(authToken, dispatch))\r\n      .catch(err => {\r\n        const { code } = err\r\n        const message =\r\n          code === 401\r\n            ? 'Incorrect username or password'\r\n            : 'Unable to login, please try again'\r\n        dispatch(authError(err))\r\n        // Could not authenticate, so return a SubmissionError for Redux\r\n        // Form\r\n        return Promise.reject(\r\n          new SubmissionError({\r\n            _error: message\r\n          })\r\n        )\r\n      })\r\n  )\r\n}\r\n\r\nexport const refreshAuthToken = () => (dispatch, getState) => {\r\n  dispatch(authRequest())\r\n  const authToken = getState().auth.authToken\r\n  return fetch(`${API_BASE_URL}/auth/refresh`, {\r\n    method: 'POST',\r\n    headers: {\r\n      // Provide our existing token as credentials to get a new one\r\n      Authorization: `Bearer ${authToken}`\r\n    }\r\n  })\r\n    .then(res => normalizeResponseErrors(res))\r\n    .then(res => res.json())\r\n    .then(({ authToken }) => storeAuthInfo(authToken, dispatch))\r\n    .catch(err => {\r\n      // We couldn't get a refresh token because our current credentials\r\n      // are invalid or expired, or something else went wrong, so clear\r\n      // them and sign us out\r\n      dispatch(authError(err))\r\n      dispatch(clearAuth())\r\n      clearAuthToken(authToken)\r\n    })\r\n}\r\n","import { API_BASE_URL } from '../config'\r\nimport { normalizeResponseErrors } from './utils'\r\n\r\nexport const GET_QUESTION_SUCCESS = 'GET_QUESTION_SUCCESS'\r\nexport const getQuestionSuccess = (question, accuracy) => ({\r\n  type: GET_QUESTION_SUCCESS,\r\n  question,\r\n  accuracy\r\n})\r\n\r\nexport const GET_QUESTION_ERROR = 'GET_QUESTION_ERROR'\r\nexport const getQuestionError = error => ({\r\n  type: GET_QUESTION_ERROR,\r\n  error\r\n})\r\n\r\nexport const GET_QUESTION_REQUEST = 'GET_QUESTION_REQUEST'\r\nexport const getQuestionRequest = () => ({\r\n  type: GET_QUESTION_REQUEST\r\n})\r\n\r\nexport const getQuestion = () => (dispatch, getState) => {\r\n  dispatch(getQuestionRequest())\r\n  return fetch(`${API_BASE_URL}/question`, {\r\n    headers: {\r\n      authorization: `Bearer ${getState().auth.authToken}`\r\n    }\r\n  })\r\n    .then(res => normalizeResponseErrors(res))\r\n    .then(res => res.json())\r\n    .then(({question, right, wrong}) => {\r\n      const accuracy = Math.floor((right / (right + wrong)) * 100)\r\n      dispatch(getQuestionSuccess(question, accuracy))\r\n    })\r\n    .catch(err => {\r\n      dispatch(getQuestionError(err))\r\n    })\r\n}\r\n\r\nexport const SEND_USER_RESPONSE_REQUEST = 'SEND_USER_RESPONSE_REQUEST'\r\nexport const sendUserResponseRequest = () => ({\r\n  type: SEND_USER_RESPONSE_REQUEST\r\n})\r\n\r\nexport const SEND_USER_RESPONSE_SUCCESS = 'SEND_USER_RESPONSE_SUCCESS'\r\nexport const sendUserResponseSuccess = () => ({\r\n  type: SEND_USER_RESPONSE_SUCCESS\r\n})\r\n\r\nexport const SEND_USER_RESPONSE_ERROR = 'SEND_USER_RESPONSE_ERROR'\r\nexport const sendUserResponseError = error => ({\r\n  type: SEND_USER_RESPONSE_ERROR,\r\n  error\r\n})\r\n\r\nexport const sendUserResponse = grade => (dispatch, getState) => {\r\n  dispatch(sendUserResponseRequest())\r\n  return fetch(`${API_BASE_URL}/question`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${getState().auth.authToken}`\r\n    },\r\n    body: JSON.stringify({\r\n      userResponse: grade\r\n    })\r\n  })\r\n    .then(res => normalizeResponseErrors(res))\r\n    .then(res => {\r\n      dispatch(sendUserResponseSuccess())\r\n      if (res.status === 204) {\r\n        return Promise.resolve('Correct')\r\n      } else {\r\n        return res.json()\r\n      }\r\n    })\r\n    .catch(err => dispatch(sendUserResponseError(err)))\r\n}\r\n\r\nexport const CLEAR_QUESTION = 'CLEAR_QUESTION'\r\nexport const clearQuestion = () => ({\r\n  type: CLEAR_QUESTION\r\n})","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { clearAuth } from '../actions/auth'\r\nimport { clearAuthToken } from '../local-storage'\r\nimport { clearQuestion } from '../actions/question'\r\nimport './styles/card.css'\r\n\r\nexport const Card = props => {\r\n  let logOutButton\r\n  let userName\r\n  let Child\r\n  let accuracy\r\n  if (props.loggedIn) {\r\n    logOutButton = <button onClick={() => props.logOut()} className=\"log-out\">Log out</button>\r\n    userName = <strong>{props.user.username}</strong>\r\n  }\r\n  if (props.accuracy) {\r\n    accuracy = <strong className=\"accuracy\">ACCURACY: {props.accuracy}%</strong>\r\n  }\r\n  Child = props.Child\r\n  return (\r\n    <div className=\"card\">\r\n      {accuracy}\r\n      <Child />\r\n      <div>\r\n        {userName}\r\n        {logOutButton}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null,\r\n  user: state.auth.currentUser,\r\n  accuracy: state.question.accuracy\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logOut: () => {\r\n    dispatch(clearAuth())\r\n    dispatch(clearQuestion())\r\n    clearAuthToken()\r\n  }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Card)\r\n","import React from 'react'\r\nimport './styles/input.css'\r\n\r\nexport default class Input extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.meta.active && this.props.meta.active) {\r\n      this.input.focus()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let error\r\n    if (this.props.meta.touched && this.props.meta.error) {\r\n      error = <div className=\"form-error\">{this.props.meta.error}</div>\r\n    }\r\n\r\n    let warning\r\n    if (this.props.meta.touched && this.props.meta.warning) {\r\n      warning = <div className=\"form-warning\">{this.props.meta.warning}</div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"form-input\">\r\n        <label htmlFor={this.props.input.name}>\r\n          {this.props.label}\r\n          {error}\r\n          {warning}\r\n        </label>\r\n        <input\r\n          autoComplete={ this.props.autocomplete }\r\n          {...this.props.input}\r\n          id={this.props.input.name}\r\n          type={this.props.type}\r\n          ref={input => (this.input = input)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const required = value => (value ? undefined : 'Required')\r\nexport const nonEmpty = value =>\r\n  value.trim() !== '' ? undefined : 'Cannot be empty'\r\nexport const isTrimmed = value =>\r\n  value.trim() === value ? undefined : 'Cannot start or end with whitespace'\r\nexport const length = length => value => {\r\n  if (length.min && value.length < length.min) {\r\n    return `Must be at least ${length.min} characters long`\r\n  }\r\n  if (length.max && value.length > length.max) {\r\n    return `Must be at most ${length.max} characters long`\r\n  }\r\n}\r\nexport const matches = field => (value, allValues) =>\r\n  field in allValues && value.trim() === allValues[field].trim()\r\n    ? undefined\r\n    : 'Does not match'\r\n","import React from 'react'\r\nimport Input from './input'\r\nimport { login } from '../actions/auth'\r\nimport { required, nonEmpty } from '../validators'\r\nimport { Field, reduxForm, focus } from 'redux-form'\r\nimport './styles/login-form.css'\r\n\r\nexport class LoginForm extends React.Component {\r\n  onSubmit(values) {\r\n    return this.props.dispatch(login(values.username, values.password))\r\n  }\r\n\r\n  render() {\r\n    let error\r\n    if (this.props.error) {\r\n      error = (\r\n        <div className=\"form-error\" aria-live=\"polite\">\r\n          {this.props.error}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <form\r\n        className=\"login-form\"\r\n        onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}\r\n      >\r\n        {error}\r\n        <Field\r\n          component={Input}\r\n          type=\"text\"\r\n          name=\"username\"\r\n          id=\"username\"\r\n          label=\"USERNAME\"\r\n          autocomplete=\"username\"\r\n          validate={[required, nonEmpty]}\r\n        />\r\n        <Field\r\n          component={Input}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          label=\"PASSWORD\"\r\n          autocomplete=\"current-password\"\r\n          validate={[required, nonEmpty]}\r\n        />\r\n        <button disabled={this.props.pristine || this.props.submitting}>\r\n          LOGIN\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'login',\r\n  onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\r\n})(LoginForm)\r\n","import React from 'react'\r\nimport Card from './card'\r\nimport LoginForm from './login-form'\r\nimport {BASENAME} from '../config'\r\nimport { connect } from 'react-redux'\r\nimport { getQuestion } from '../actions/question'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport './styles/landing-page.css'\r\n\r\nexport function LandingPage(props) {\r\n  // If we are logged in redirect straight to the user's dashboard\r\n  if (props.loggedIn) {\r\n    props.dispatch(getQuestion())\r\n      .then(() => props.history.push(`${BASENAME}/dashboard`))\r\n  }\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <Card Child={LoginForm} />\r\n      <Link to={`${BASENAME}/register`}>Don't have an account? Register here!</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(LandingPage))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sendUserResponse, getQuestion } from '../actions/question'\r\nimport './styles/question.css'\r\n\r\nexport class Question extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      userInput: '',\r\n      answer: null\r\n    }\r\n  }\r\n\r\n  submit = e => {\r\n    e.preventDefault()\r\n    if (this.state.userInput.trim() === '') return\r\n    this.props\r\n      .dispatch(sendUserResponse(this.state.userInput.trim()))\r\n      .then(data => {\r\n        this.setState({userInput: '', answer: data})\r\n      })\r\n  }\r\n\r\n  nextQuestion = e => {\r\n    e.preventDefault()\r\n    this.setState({answer:null}, () => this.props.dispatch(getQuestion()))\r\n  }\r\n\r\n  render() {\r\n    if (this.props.error && this.props.error.message) {\r\n      console.log(this.props.error)\r\n      return <p>{this.props.error.message}</p>\r\n    } \r\n    else if (!this.props.question && !this.state.answer) return <div />\r\n    else if (this.state.answer) {\r\n      return (\r\n        <div className=\"question-answer\">\r\n          <h2>{this.state.answer}</h2>\r\n          <form onSubmit={e => { this.nextQuestion(e) }}>\r\n            <button type=\"submit\">\r\n              Next Question\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"question\">\r\n          <h2 className=\"question-text\">{this.props.question}</h2>\r\n          <form className=\"question-user-response\" onSubmit={e => this.submit(e)}>\r\n            <input\r\n              aria-label=\"response\"\r\n              type=\"text\"\r\n              value={this.state.userInput}\r\n              onChange={e => this.setState({ userInput: e.target.value })}\r\n            />\r\n            <button type=\"submit\">Check</button>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  question: state.question.question,\r\n  error: state.question.error\r\n})\r\n\r\nexport default connect(mapStateToProps)(Question)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport requiresLogin from './requires-login'\r\nimport Card from './card'\r\nimport Question from './question'\r\nimport { getQuestion } from '../actions/question'\r\n\r\nexport class Dashboard extends React.Component {\r\n  componentDidMount() {\r\n    if (!this.props.question) {\r\n      this.props.dispatch(getQuestion())\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"dashboard-username\">\r\n          <Card Child={Question} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  question: state.question.question\r\n})\r\n\r\nexport default requiresLogin()(connect(mapStateToProps)(Dashboard))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { BASENAME } from '../config'\r\n\r\nexport default () => Component => {\r\n  function RequiresLogin(props) {\r\n    const { authenticating, loggedIn, error, ...passThroughProps } = props\r\n    if (authenticating) {\r\n      return <div>Logging in...</div>\r\n    } else if (!loggedIn || error) {\r\n      return <Redirect to={`${BASENAME}/`} />\r\n    }\r\n\r\n    return <Component {...passThroughProps} />\r\n  }\r\n\r\n  const displayName = Component.displayName || Component.name || 'Component'\r\n  RequiresLogin.displayName = `RequiresLogin(${displayName})`\r\n\r\n  const mapStateToProps = (state, props) => ({\r\n    authenticating: state.auth.loading,\r\n    loggedIn: state.auth.currentUser !== null,\r\n    error: state.auth.error\r\n  })\r\n\r\n  return connect(mapStateToProps)(RequiresLogin)\r\n}\r\n","import React from 'react'\r\nimport { login } from '../actions/auth'\r\nimport { registerUser } from '../actions/users'\r\nimport { Field, reduxForm, focus } from 'redux-form'\r\nimport { required, nonEmpty, matches, length, isTrimmed } from '../validators'\r\nimport Input from './input'\r\n\r\nconst passwordLength = length({ min: 6, max: 72 })\r\nconst matchesPassword = matches('password')\r\n\r\nexport class RegistrationForm extends React.Component {\r\n  onSubmit(values) {\r\n    const { username, password } = values\r\n    const user = { username, password }\r\n    return this.props\r\n      .dispatch(registerUser(user))\r\n      .then(() => this.props.dispatch(login(username, password)))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"login-form\"\r\n        onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}\r\n      >\r\n        <Field\r\n          component={Input}\r\n          type=\"text\"\r\n          name=\"username\"\r\n          label=\"USERNAME\"\r\n          validate={[required, nonEmpty, isTrimmed]}\r\n        />\r\n        <Field\r\n          component={Input}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          label=\"PASSWORD\"\r\n          validate={[required, passwordLength, isTrimmed]}\r\n        />\r\n        <Field\r\n          component={Input}\r\n          type=\"password\"\r\n          name=\"passwordConfirm\"\r\n          label=\"CONFIRM\"\r\n          validate={[required, nonEmpty, matchesPassword]}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={this.props.pristine || this.props.submitting}\r\n        >\r\n          Register\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'registration',\r\n  onSubmitFail: (errors, dispatch) =>\r\n    dispatch(focus('registration', Object.keys(errors)[0]))\r\n})(RegistrationForm)\r\n","import { SubmissionError } from 'redux-form'\r\n\r\nimport { API_BASE_URL } from '../config'\r\nimport { normalizeResponseErrors } from './utils'\r\n\r\nexport const registerUser = user => dispatch => {\r\n  return fetch(`${API_BASE_URL}/users`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(res => normalizeResponseErrors(res))\r\n    .then(res => res.json())\r\n    .catch(err => {\r\n      const { reason, message, location } = err\r\n      if (reason === 'ValidationError') {\r\n        // Convert ValidationErrors into SubmissionErrors for Redux Form\r\n        return Promise.reject(\r\n          new SubmissionError({\r\n            [location]: message\r\n          })\r\n        )\r\n      }\r\n    })\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { BASENAME } from '../config';\r\nimport RegistrationForm from './registration-form'\r\nimport Card from './card'\r\nimport './styles/registration-page.css'\r\n\r\nexport function RegistrationPage(props) {\r\n  // If we are logged in (which happens automatically when registration\r\n  // is successful) redirect to the user's dashboard\r\n  if (props.loggedIn) {\r\n    return <Redirect to={`${BASENAME}/dashboard`} />\r\n  }\r\n  return (\r\n    <div className=\"registration-page\">\r\n      <Card Child={RegistrationForm} />\r\n      <Link to={`${BASENAME}/`}>Already have an account? Login here!</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedIn: state.auth.currentUser !== null\r\n})\r\n\r\nexport default connect(mapStateToProps)(RegistrationPage)\r\n","import React from 'react'\r\nimport HeaderBar from './header-bar'\r\nimport LandingPage from './landing-page'\r\nimport Dashboard from './dashboard'\r\nimport RegistrationPage from './registration-page'\r\nimport { BASENAME } from '../config'\r\nimport { connect } from 'react-redux'\r\nimport { refreshAuthToken } from '../actions/auth'\r\nimport { Route, withRouter } from 'react-router-dom'\r\nimport './styles/app.css'\r\n\r\nexport class App extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.loggedIn && this.props.loggedIn) {\r\n      // When we are logged in, refresh the auth token periodically\r\n      this.startPeriodicRefresh()\r\n    } else if (prevProps.loggedIn && !this.props.loggedIn) {\r\n      // Stop refreshing when we log out\r\n      this.stopPeriodicRefresh()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stopPeriodicRefresh()\r\n  }\r\n\r\n  startPeriodicRefresh() {\r\n    this.refreshInterval = setInterval(\r\n      () => this.props.dispatch(refreshAuthToken()),\r\n      60 * 60 * 1000 // One hour\r\n    )\r\n  }\r\n\r\n  stopPeriodicRefresh() {\r\n    if (!this.refreshInterval) {\r\n      return\r\n    }\r\n\r\n    clearInterval(this.refreshInterval)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"app\">\r\n        <HeaderBar />\r\n        <Route exact path={`${BASENAME}/`} component={LandingPage} />\r\n        <Route exact path={`${BASENAME}/dashboard`} component={Dashboard}/>\r\n        <Route\r\n          exact\r\n          path={`${BASENAME}/register`}\r\n          component={RegistrationPage}\r\n        />\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  hasAuthToken: state.auth.authToken !== null,\r\n  loggedIn: state.auth.currentUser !== null\r\n})\r\n\r\n// Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\r\nexport default withRouter(connect(mapStateToProps)(App))\r\n","import {\r\n  SET_AUTH_TOKEN,\r\n  CLEAR_AUTH,\r\n  AUTH_REQUEST,\r\n  AUTH_SUCCESS,\r\n  AUTH_ERROR\r\n} from '../actions/auth'\r\n\r\nconst initialState = {\r\n  authToken: null, // authToken !== null does not mean it has been validated\r\n  currentUser: null,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  if (action.type === SET_AUTH_TOKEN) {\r\n    return Object.assign({}, state, {\r\n      authToken: action.authToken\r\n    })\r\n  } else if (action.type === CLEAR_AUTH) {\r\n    return Object.assign({}, state, {\r\n      authToken: null,\r\n      currentUser: null\r\n    })\r\n  } else if (action.type === AUTH_REQUEST) {\r\n    return Object.assign({}, state, {\r\n      loading: true,\r\n      error: null\r\n    })\r\n  } else if (action.type === AUTH_SUCCESS) {\r\n    return Object.assign({}, state, {\r\n      loading: false,\r\n      currentUser: action.currentUser\r\n    })\r\n  } else if (action.type === AUTH_ERROR) {\r\n    return Object.assign({}, state, {\r\n      loading: false,\r\n      error: action.error\r\n    })\r\n  }\r\n  return state\r\n}\r\n","import {\r\n  GET_QUESTION_REQUEST,\r\n  GET_QUESTION_SUCCESS,\r\n  GET_QUESTION_ERROR,\r\n  SEND_USER_RESPONSE_REQUEST,\r\n  SEND_USER_RESPONSE_SUCCESS,\r\n  SEND_USER_RESPONSE_ERROR,\r\n  CLEAR_QUESTION\r\n} from '../actions/question'\r\n\r\nconst initialState = {\r\n  question: null,\r\n  accuracy: null,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_QUESTION_REQUEST:\r\n      return { ...state, loading: true, error: null }\r\n    case GET_QUESTION_SUCCESS:\r\n      return { ...state, loading: false, question: action.question, accuracy: action.accuracy }\r\n    case GET_QUESTION_ERROR:\r\n      return { ...state, loading: false, error: action.error }\r\n    case SEND_USER_RESPONSE_REQUEST:\r\n      return { ...state, loading: true, error: null }\r\n    case SEND_USER_RESPONSE_SUCCESS:\r\n      return { ...state, loading: false, question: null }\r\n    case SEND_USER_RESPONSE_ERROR:\r\n      return { ...state, loading: false, error: action.error }\r\n    case CLEAR_QUESTION:\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunk from 'redux-thunk'\r\nimport { loadAuthToken } from './local-storage'\r\nimport authReducer from './reducers/auth'\r\nimport { setAuthToken, refreshAuthToken } from './actions/auth'\r\nimport questionReducer from './reducers/question'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  combineReducers({\r\n    form: formReducer,\r\n    auth: authReducer,\r\n    question: questionReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\n// Hydrate the authToken from localStorage if it exist\r\nconst authToken = loadAuthToken()\r\nif (authToken) {\r\n  const token = authToken\r\n  store.dispatch(setAuthToken(token))\r\n  store.dispatch(refreshAuthToken())\r\n}\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/app'\r\nimport store from './store'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}